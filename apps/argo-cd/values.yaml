controller:
  enableStatefulSet: true

server:
  autoscaling:
    enabled: false
    minReplicas: 1


## The following addons are not really necessarily for a homelab setup
## Enable if you have enough CPU/Memory resources and need them for some purpose
dex:
  enabled: false

redis:
  enabled: false

notifications:
  enabled: false

applicationSet:
  enabled: false

repoServer:
  autoscaling:
    enabled: false
    minReplicas: 1

configs:
  params:
    # Disable TLS termination on ArgoCD server
    # TLS is handled by the Ingress controller
    # If disabled, this leads to endless redirect loop.
    server.insecure: true
  secret:
    argocdServerAdminPassword: $2a$10$DgLLTi.nyUd3BUNXH0WEQOFgYbUOwU7Bpd7ukVuNPflVm4QnxEdfm
  repositories:
    podinfo-helm-repo:
      url: https://stefanprodan.github.io/podinfo
      name: podinfo
      type: helm
    app-manifests-repo:
      url: https://github.com/slashr/app-manifests.git
      name: app-manifests
      type: git

server:
  ingress:
    enabled: true
    annotations:
    # This lets cert-manager identify which Ingresses to generate a cert for
      cert-manager.io/cluster-issuer: letsencrypt-prod

    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts:
      - "argo.akashnair.com"

    # -- List of ingress paths
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: argocd-tls
        hosts:
          - "argo.akashnair.com"

  certificate:
    # -- Deploy a Certificate resource (requires cert-manager)
    enabled: true
    # -- The name of the Secret that will be automatically created and managed by this Certificate resource
    secretName: argocd-tls
    # -- Certificate primary domain (commonName)
    domain: argo.akashnair.com
    issuer:
      # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`
      group: "cert-manager.io"
      # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`
      kind: "ClusterIssuer"
      # -- Certificate issuer name. Eg. `letsencrypt`
      name: "letsencrypt-prod"
